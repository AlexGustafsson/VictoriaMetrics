{% import (
    "fmt"
    "sort"
    "strings"
    "time"

	"github.com/VictoriaMetrics/VictoriaMetrics/lib/htmlcomponents"
) %}

{% stripspace %}

{% func StreamAggHTML(rws map[string]*Aggregators, rwActive string) %}
<!DOCTYPE html>
<html lang="en">
<head>
    {%= htmlcomponents.CommonHeader() %}
    <title>Stream aggregation</title>
</head>
<body>
    {%= htmlcomponents.Navbar() %}
    <div class="container-fluid">
        <div class="row">
            <main class="col-12">
                <h1>Aggregations</h1>
                <hr />
                <ul class="nav nav-tabs" id="rw-tab" role="tablist">
                    {% for rwKey, _ := range rws  %}
                        <li class="nav-item" role="presentation">
                            <button class="nav-link{%if rwKey==rwActive %}{% space %}active{%endif%}" type="button" role="tab"
                              onclick="location.href='?rw={%s rwKey %}'">
                                {%s rwKey %}
                            </button>
                        </li>
                    {% endfor %}
                </ul>
                <div class="tab-content">
                    <div class="tab-pane active" role="tabpanel">
                        <div id="aggregations" class="table-responsive">
                          <table class="table table-striped table-hover table-bordered table-sm">
                              <thead>
                                  <tr>
                                      <th scope="col" style="width: 5%">Num</th>
                                      <th scope="col" style="width: 35%">Match</th>
                                      <th scope="col" style="width: 10%">By</th>
                                      <th scope="col" style="width: 10%">Without</a>
                                      <th scope="col" style="width: 40%">Outputs</a>
                                  </tr>
                              </thead>
                              <tbody>
                              {% code aggs := rws[rwActive] %}
                              {% for an, agg := range aggs.as %}
                                  <tr>
                                      <td>{%d an %}</td>
                                      <td>
                                          <code>{%s agg.match.String() %}</code>
                                      </td>
                                      <td class="labels">
                                          {% for abn, ab := range agg.by %}
                                              {% if abn > 0 %}
                                                <span>, </span>
                                              {% endif %}
                                              <span class="badge bg-secondary">
                                                {%s ab %}
                                              </span>
                                          {% endfor %}
                                      </td>
                                      <td class="labels">
                                          {% for awn, aw := range agg.without %}
                                              {% if awn > 0 %}
                                                <span>, </span>
                                              {% endif %}
                                              <span class="badge bg-secondary">
                                                {%s aw %}
                                              </span>
                                          {% endfor %}
                                      </td>
                                      <td class="labels">
                                          {% for asn, as := range agg.aggrStates %}
                                              {% if asn > 0 %}
                                                  <span>, </span>
                                              {% endif %}
                                              <a href="?rw={%s rwActive %}&agg={%d an %}&output={%s as.getOutputName() %}">
                                                  {%s as.getOutputName() %}
                                              </a>
                                          {% endfor %}
                                      </td>
                                  </tr>
                              {% endfor %}
                              </tbody>
                          </table>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>
</body>
</html>
{% endfunc %}

{% func StreamAggOutputStateHTML(rwActive string, aggNum int, agg *aggregator, as aggrState, limit int) %}
<!DOCTYPE html>
<html lang="en">
<head>
    {%= htmlcomponents.CommonHeader() %}
    <title>Stream aggregation</title>
</head>
<body>
    {%= htmlcomponents.Navbar() %}
    <div class="container-fluid">
        <div class="row">
            <main class="col-12">
                <h1>Aggregation state</h1>
                <h4> [ <a href="?rw={%s rwActive %}">back to aggregations</a> ] </h3>
                <hr />
                <h6>
                    <div class="row">
                        <div class="col-xxl-1">Remote write:</div>
                        <code class="col w-100">{%s rwActive %}</code>
                        <div class="w-100"></div>

                        <div class="col-xxl-1">Aggregation num:</div>
                        <code class="col w-100">{%d aggNum %}</code>
                        <div class="w-100"></div>

                        <div class="col-xxl-1">Match:</div>
                        <code class="col w-100">{%s agg.match.String() %}</code>
                        <div class="w-100"></div>

                        {% if len(agg.by) > 0 %}
                            <div class="col-xxl-1">By:</div>
                            <code class="col w-100">{%s strings.Join(agg.by, ", ") %}</code>
                            <div class="w-100"></div>
                        {% endif %}
                        {% if len(agg.without) > 0 %}
                            <div class="col-xxl-1">Without:</div>
                            <code class="col w-100">{%s strings.Join(agg.without, ", ") %}</code>
                            <div class="w-100"></div>
                        {% endif %}
                    </div>
                </h6>
                <hr />
                <ul class="nav nav-tabs" id="rw-tab" role="tablist">
                    {% for _, a := range agg.aggrStates  %}
                        <li class="nav-item" role="presentation">
                            <button class="nav-link{%if a.getOutputName()==as.getOutputName() %}{% space %}active{%endif%}" type="button" role="tab"
                              onclick="location.href='?rw={%s rwActive %}&agg={%d aggNum %}&output={%s a.getOutputName() %}'">
                                {%s a.getOutputName() %}
                            </button>
                        </li>
                    {% endfor %}
                </ul>
                <div class="tab-content">
                    <div class="tab-pane active" role="tabpanel">
                        <div id="aggregation-state" class="table-responsive">
                            <table class="table table-striped table-hover table-bordered table-sm">
                                {% code
                                    sr := as.getStateRepresentation(agg.suffix)
                                    sort.Slice(sr, func(i, j int) bool {
                                        return sr[i].metric < sr[j].metric
                                    })
                                    if len(sr) > limit {
                                        sr = sr[:limit]
                                    }
                                %}
                                <thead>
                                    <tr>
                                        <th scope="col">Metric</th>
                                        <th scope="col">Current value</th>
                                        <th scope="col">Samples count</th>
                                        <th scope="col">Last push time</th>
                                        <th scope="col">Next push time</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for _, asr := range sr %}
                                        <tr>
                                            <td>
                                                <code>{%s asr.metric %}</code>
                                            </td>
                                            <td class="text-end">
                                                {%f asr.currentValue %}
                                            </td>
                                            <td class="text-end">
                                                {%s fmt.Sprintf("%v", asr.samplesCount) %}
                                            </td>
                                            <td>
                                                {% if asr.lastPushTimestamp == 0 %}
                                                    {%s time.Unix(int64(agg.initialTime), 0).String() %}
                                                {% else %}
                                                    {%s time.Unix(int64(asr.lastPushTimestamp), 0).String() %}
                                                {% endif %}
                                            </td>
                                            <td>
                                                {% if asr.lastPushTimestamp == 0 %}
                                                    {%s time.Unix(int64(asr.nextPushTimestamp + agg.initialTime), 0).Format(time.RFC3339) %}
                                                {% else %}
                                                    {%s time.Unix(int64(asr.nextPushTimestamp), 0).Format(time.RFC3339) %}
                                                {% endif %}
                                            </td>
                                        </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>
</body>
</html>
{% endfunc %}

{% endstripspace %}
