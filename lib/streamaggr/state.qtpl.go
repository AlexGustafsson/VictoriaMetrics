// Code generated by qtc from "state.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line lib/streamaggr/state.qtpl:1
package streamaggr

//line lib/streamaggr/state.qtpl:1
import (
	"sort"
	"strings"

	"github.com/VictoriaMetrics/VictoriaMetrics/lib/htmlcomponents"
)

//line lib/streamaggr/state.qtpl:10
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line lib/streamaggr/state.qtpl:10
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line lib/streamaggr/state.qtpl:10
func StreamStreamAggHTML(qw422016 *qt422016.Writer, rws map[string]*Aggregators, rwActive string) {
//line lib/streamaggr/state.qtpl:10
	qw422016.N().S(`<!DOCTYPE html><html lang="en"><head>`)
//line lib/streamaggr/state.qtpl:14
	htmlcomponents.StreamCommonHeader(qw422016)
//line lib/streamaggr/state.qtpl:14
	qw422016.N().S(`<title>Stream aggregation</title></head><body>`)
//line lib/streamaggr/state.qtpl:18
	htmlcomponents.StreamNavbar(qw422016)
//line lib/streamaggr/state.qtpl:18
	qw422016.N().S(`<div class="container-fluid"><div class="row"><main class="col-12"><h1>Aggregations</h1><hr /><ul class="nav nav-tabs" id="rw-tab" role="tablist">`)
//line lib/streamaggr/state.qtpl:25
	for rwKey, _ := range rws {
//line lib/streamaggr/state.qtpl:25
		qw422016.N().S(`<li class="nav-item" role="presentation"><button class="nav-link`)
//line lib/streamaggr/state.qtpl:27
		if rwKey == rwActive {
//line lib/streamaggr/state.qtpl:27
			qw422016.N().S(` `)
//line lib/streamaggr/state.qtpl:27
			qw422016.N().S(`active`)
//line lib/streamaggr/state.qtpl:27
		}
//line lib/streamaggr/state.qtpl:27
		qw422016.N().S(`" type="button" role="tab"onclick="location.href='?rw=`)
//line lib/streamaggr/state.qtpl:28
		qw422016.E().S(rwKey)
//line lib/streamaggr/state.qtpl:28
		qw422016.N().S(`'">`)
//line lib/streamaggr/state.qtpl:29
		qw422016.E().S(rwKey)
//line lib/streamaggr/state.qtpl:29
		qw422016.N().S(`</button></li>`)
//line lib/streamaggr/state.qtpl:32
	}
//line lib/streamaggr/state.qtpl:32
	qw422016.N().S(`</ul><div class="tab-content"><div class="tab-pane active" role="tabpanel"><div id="aggregations" class="table-responsive"><table class="table table-striped table-hover table-bordered table-sm"><thead><tr><th scope="col" style="width: 5%">Num</th><th scope="col" style="width: 35%">Match</th><th scope="col" style="width: 10%">By</th><th scope="col" style="width: 10%">Without</a><th scope="col" style="width: 40%">Outputs</a></tr></thead><tbody>`)
//line lib/streamaggr/state.qtpl:48
	aggs := rws[rwActive]

//line lib/streamaggr/state.qtpl:49
	for an, agg := range aggs.as {
//line lib/streamaggr/state.qtpl:49
		qw422016.N().S(`<tr><td>`)
//line lib/streamaggr/state.qtpl:51
		qw422016.N().D(an)
//line lib/streamaggr/state.qtpl:51
		qw422016.N().S(`</td><td><code>`)
//line lib/streamaggr/state.qtpl:53
		qw422016.E().S(agg.match.String())
//line lib/streamaggr/state.qtpl:53
		qw422016.N().S(`</code></td><td class="labels">`)
//line lib/streamaggr/state.qtpl:56
		for abn, ab := range agg.by {
//line lib/streamaggr/state.qtpl:57
			if abn > 0 {
//line lib/streamaggr/state.qtpl:57
				qw422016.N().S(`<span>, </span>`)
//line lib/streamaggr/state.qtpl:59
			}
//line lib/streamaggr/state.qtpl:59
			qw422016.N().S(`<span class="badge bg-secondary">`)
//line lib/streamaggr/state.qtpl:61
			qw422016.E().S(ab)
//line lib/streamaggr/state.qtpl:61
			qw422016.N().S(`</span>`)
//line lib/streamaggr/state.qtpl:63
		}
//line lib/streamaggr/state.qtpl:63
		qw422016.N().S(`</td><td class="labels">`)
//line lib/streamaggr/state.qtpl:66
		for awn, aw := range agg.without {
//line lib/streamaggr/state.qtpl:67
			if awn > 0 {
//line lib/streamaggr/state.qtpl:67
				qw422016.N().S(`<span>, </span>`)
//line lib/streamaggr/state.qtpl:69
			}
//line lib/streamaggr/state.qtpl:69
			qw422016.N().S(`<span class="badge bg-secondary">`)
//line lib/streamaggr/state.qtpl:71
			qw422016.E().S(aw)
//line lib/streamaggr/state.qtpl:71
			qw422016.N().S(`</span>`)
//line lib/streamaggr/state.qtpl:73
		}
//line lib/streamaggr/state.qtpl:73
		qw422016.N().S(`</td><td class="labels">`)
//line lib/streamaggr/state.qtpl:76
		for asn, as := range agg.aggrStates {
//line lib/streamaggr/state.qtpl:77
			if asn > 0 {
//line lib/streamaggr/state.qtpl:77
				qw422016.N().S(`<span>, </span>`)
//line lib/streamaggr/state.qtpl:79
			}
//line lib/streamaggr/state.qtpl:79
			qw422016.N().S(`<a href="?rw=`)
//line lib/streamaggr/state.qtpl:80
			qw422016.E().S(rwActive)
//line lib/streamaggr/state.qtpl:80
			qw422016.N().S(`&agg=`)
//line lib/streamaggr/state.qtpl:80
			qw422016.N().D(an)
//line lib/streamaggr/state.qtpl:80
			qw422016.N().S(`&output=`)
//line lib/streamaggr/state.qtpl:80
			qw422016.E().S(as.getOutputName())
//line lib/streamaggr/state.qtpl:80
			qw422016.N().S(`">`)
//line lib/streamaggr/state.qtpl:81
			qw422016.E().S(as.getOutputName())
//line lib/streamaggr/state.qtpl:81
			qw422016.N().S(`</a>`)
//line lib/streamaggr/state.qtpl:83
		}
//line lib/streamaggr/state.qtpl:83
		qw422016.N().S(`</td></tr>`)
//line lib/streamaggr/state.qtpl:86
	}
//line lib/streamaggr/state.qtpl:86
	qw422016.N().S(`</tbody></table></div></div></div></main></div></div></body></html>`)
//line lib/streamaggr/state.qtpl:97
}

//line lib/streamaggr/state.qtpl:97
func WriteStreamAggHTML(qq422016 qtio422016.Writer, rws map[string]*Aggregators, rwActive string) {
//line lib/streamaggr/state.qtpl:97
	qw422016 := qt422016.AcquireWriter(qq422016)
//line lib/streamaggr/state.qtpl:97
	StreamStreamAggHTML(qw422016, rws, rwActive)
//line lib/streamaggr/state.qtpl:97
	qt422016.ReleaseWriter(qw422016)
//line lib/streamaggr/state.qtpl:97
}

//line lib/streamaggr/state.qtpl:97
func StreamAggHTML(rws map[string]*Aggregators, rwActive string) string {
//line lib/streamaggr/state.qtpl:97
	qb422016 := qt422016.AcquireByteBuffer()
//line lib/streamaggr/state.qtpl:97
	WriteStreamAggHTML(qb422016, rws, rwActive)
//line lib/streamaggr/state.qtpl:97
	qs422016 := string(qb422016.B)
//line lib/streamaggr/state.qtpl:97
	qt422016.ReleaseByteBuffer(qb422016)
//line lib/streamaggr/state.qtpl:97
	return qs422016
//line lib/streamaggr/state.qtpl:97
}

//line lib/streamaggr/state.qtpl:99
func StreamStreamAggOutputStateHTML(qw422016 *qt422016.Writer, rwActive string, aggNum int, agg *aggregator, as aggrState, limit int) {
//line lib/streamaggr/state.qtpl:99
	qw422016.N().S(`<!DOCTYPE html><html lang="en"><head>`)
//line lib/streamaggr/state.qtpl:103
	htmlcomponents.StreamCommonHeader(qw422016)
//line lib/streamaggr/state.qtpl:103
	qw422016.N().S(`<title>Stream aggregation</title></head><body>`)
//line lib/streamaggr/state.qtpl:107
	htmlcomponents.StreamNavbar(qw422016)
//line lib/streamaggr/state.qtpl:107
	qw422016.N().S(`<div class="container-fluid"><div class="row"><main class="col-12"><h1>Aggregation state</h1><h4> [ <a href="?rw=`)
//line lib/streamaggr/state.qtpl:112
	qw422016.E().S(rwActive)
//line lib/streamaggr/state.qtpl:112
	qw422016.N().S(`">back to aggregations</a> ] </h3><hr /><h6><div class="row"><div class="col-xxl-1">Remote write:</div><code class="col w-100">`)
//line lib/streamaggr/state.qtpl:117
	qw422016.E().S(rwActive)
//line lib/streamaggr/state.qtpl:117
	qw422016.N().S(`</code><div class="w-100"></div><div class="col-xxl-1">Aggregation num:</div><code class="col w-100">`)
//line lib/streamaggr/state.qtpl:121
	qw422016.N().D(aggNum)
//line lib/streamaggr/state.qtpl:121
	qw422016.N().S(`</code><div class="w-100"></div><div class="col-xxl-1">Match:</div><code class="col w-100">`)
//line lib/streamaggr/state.qtpl:125
	qw422016.E().S(agg.match.String())
//line lib/streamaggr/state.qtpl:125
	qw422016.N().S(`</code><div class="w-100"></div>`)
//line lib/streamaggr/state.qtpl:128
	if len(agg.by) > 0 {
//line lib/streamaggr/state.qtpl:128
		qw422016.N().S(`<div class="col-xxl-1">By:</div><code class="col w-100">`)
//line lib/streamaggr/state.qtpl:130
		qw422016.E().S(strings.Join(agg.by, ", "))
//line lib/streamaggr/state.qtpl:130
		qw422016.N().S(`</code><div class="w-100"></div>`)
//line lib/streamaggr/state.qtpl:132
	}
//line lib/streamaggr/state.qtpl:133
	if len(agg.without) > 0 {
//line lib/streamaggr/state.qtpl:133
		qw422016.N().S(`<div class="col-xxl-1">Without:</div><code class="col w-100">`)
//line lib/streamaggr/state.qtpl:135
		qw422016.E().S(strings.Join(agg.without, ", "))
//line lib/streamaggr/state.qtpl:135
		qw422016.N().S(`</code><div class="w-100"></div>`)
//line lib/streamaggr/state.qtpl:137
	}
//line lib/streamaggr/state.qtpl:137
	qw422016.N().S(`</div></h6><hr /><ul class="nav nav-tabs" id="rw-tab" role="tablist">`)
//line lib/streamaggr/state.qtpl:142
	for _, a := range agg.aggrStates {
//line lib/streamaggr/state.qtpl:142
		qw422016.N().S(`<li class="nav-item" role="presentation"><button class="nav-link`)
//line lib/streamaggr/state.qtpl:144
		if a.getOutputName() == as.getOutputName() {
//line lib/streamaggr/state.qtpl:144
			qw422016.N().S(` `)
//line lib/streamaggr/state.qtpl:144
			qw422016.N().S(`active`)
//line lib/streamaggr/state.qtpl:144
		}
//line lib/streamaggr/state.qtpl:144
		qw422016.N().S(`" type="button" role="tab"onclick="location.href='?rw=`)
//line lib/streamaggr/state.qtpl:145
		qw422016.E().S(rwActive)
//line lib/streamaggr/state.qtpl:145
		qw422016.N().S(`&agg=`)
//line lib/streamaggr/state.qtpl:145
		qw422016.N().D(aggNum)
//line lib/streamaggr/state.qtpl:145
		qw422016.N().S(`&output=`)
//line lib/streamaggr/state.qtpl:145
		qw422016.E().S(a.getOutputName())
//line lib/streamaggr/state.qtpl:145
		qw422016.N().S(`'">`)
//line lib/streamaggr/state.qtpl:146
		qw422016.E().S(a.getOutputName())
//line lib/streamaggr/state.qtpl:146
		qw422016.N().S(`</button></li>`)
//line lib/streamaggr/state.qtpl:149
	}
//line lib/streamaggr/state.qtpl:149
	qw422016.N().S(`</ul><div class="tab-content"><div class="tab-pane active" role="tabpanel"><div id="aggregation-state" class="table-responsive"><table class="table table-striped table-hover table-bordered table-sm">`)
//line lib/streamaggr/state.qtpl:156
	sr := as.getStateRepresentation(agg.suffix)
	sort.Slice(sr, func(i, j int) bool {
		return sr[i].metric < sr[j].metric
	})
	if len(sr) > limit {
		sr = sr[:limit]
	}

//line lib/streamaggr/state.qtpl:163
	qw422016.N().S(`<thead><tr><th scope="col">Metric</th><th scope="col">Value</th></tr></thead><tbody>`)
//line lib/streamaggr/state.qtpl:171
	for _, asr := range sr {
//line lib/streamaggr/state.qtpl:171
		qw422016.N().S(`<tr><td><code>`)
//line lib/streamaggr/state.qtpl:174
		qw422016.E().S(asr.metric)
//line lib/streamaggr/state.qtpl:174
		qw422016.N().S(`</code></td><td class="text-end">`)
//line lib/streamaggr/state.qtpl:177
		qw422016.N().F(asr.value)
//line lib/streamaggr/state.qtpl:177
		qw422016.N().S(`</td></tr>`)
//line lib/streamaggr/state.qtpl:180
	}
//line lib/streamaggr/state.qtpl:180
	qw422016.N().S(`</tbody></table></div></div></div></main></div></div></body></html>`)
//line lib/streamaggr/state.qtpl:191
}

//line lib/streamaggr/state.qtpl:191
func WriteStreamAggOutputStateHTML(qq422016 qtio422016.Writer, rwActive string, aggNum int, agg *aggregator, as aggrState, limit int) {
//line lib/streamaggr/state.qtpl:191
	qw422016 := qt422016.AcquireWriter(qq422016)
//line lib/streamaggr/state.qtpl:191
	StreamStreamAggOutputStateHTML(qw422016, rwActive, aggNum, agg, as, limit)
//line lib/streamaggr/state.qtpl:191
	qt422016.ReleaseWriter(qw422016)
//line lib/streamaggr/state.qtpl:191
}

//line lib/streamaggr/state.qtpl:191
func StreamAggOutputStateHTML(rwActive string, aggNum int, agg *aggregator, as aggrState, limit int) string {
//line lib/streamaggr/state.qtpl:191
	qb422016 := qt422016.AcquireByteBuffer()
//line lib/streamaggr/state.qtpl:191
	WriteStreamAggOutputStateHTML(qb422016, rwActive, aggNum, agg, as, limit)
//line lib/streamaggr/state.qtpl:191
	qs422016 := string(qb422016.B)
//line lib/streamaggr/state.qtpl:191
	qt422016.ReleaseByteBuffer(qb422016)
//line lib/streamaggr/state.qtpl:191
	return qs422016
//line lib/streamaggr/state.qtpl:191
}
